---
title: "Client Report - [Project 2]"
subtitle: "Course DS 250"
author: "Duane Siu"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
    
---

```{python}
#| label: libraries
#| include: false
import altair as alt

from IPython.display import Markdown
from IPython.display import display
from tabulate import tabulate
```


## Elevator pitch

_When you hear the word “relationship” what is the first thing that comes to mind? Probably not baseball. But a relationship is simply a way to describe how two or more objects are connected. There are many relationships in baseball such as those between teams and managers, players and salaries, even stadiums and concession prices. The graphs on Data Visualizations from Best Tickets show many other relationships that exist in baseball.

For this project, my client would like developed SQL queries that they can use to retrieve data for use on their website without needing Python. They would also like to see example Altair charts._

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
import pandas as pd
import sqlite3
import altair as alt
con = sqlite3.connect('lahmansbaseballdb.sqlite')
```

__Highlight the grand questions__

## GRAND QUESTION 1

__Write an SQL query to create a new dataframe about baseball players who attended BYU-Idaho. The new table should contain five columns: playerID, schoolID, salary, and the yearID/teamID associated with each salary. Order the table by salary (highest to lowest) and print out the table in your report.__

_The usage of my name Duane has started gaining popularity since 1900s but started to decline from 1960s. During my birth year of 2000s the name is seldomly used compared to a century ago._

```{python}
df = pd.read_sql_query("""
    SELECT DISTINCT Salaries.playerID, CollegePlaying.schoolID, Salaries.teamID, Salaries.Salary, Salaries.yearID
    FROM Salaries 
    JOIN CollegePlaying ON Salaries.playerID = CollegePlaying.playerID
    WHERE CollegePlaying.schoolID LIKE "%BYUI%"
    ORDER BY salary DESC
    """, con)

df
```

## GRAND QUESTION 2

__If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?__

_She will be around the age of 30-35._

```{python}
## Brittany appearnace
name = (names
    .query("name == 'Brittany'")
    .assign(Age=lambda name:2022 - name['year'].dt.year)
)

#%%
chart = (
    alt.Chart(name)
    .encode(
        x = "Age",
        y = "Total",
        color = alt.Color("name")
    ).mark_line()
)
chart
```

## GRAND QUESTION 3

__Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?__

_We can see Mary is the most popular name out of the four while Martha and Peter being the least popular overall._
_Martha name's popularity increased gradually from 1920s and peaked at around 1950s then started deacreasing._
_Peter followed a similar trend with Martha but with a slightly lesser increase and decrease over the entire period._

```{python}
## Mary, Martha, Peter, and Paul
name = (names
    .query("name == ['Mary', 'Martha', 'Peter', 'Paul']")
    .query("year >= 1920 & year <= 2000")
)

chart = (alt.Chart(name)
        .encode(
            x = "year",
            y = "Total",
            color = alt.Color("name")
        ).mark_line()
)
chart
```

_include figures in chunks and discuss your findings in the figure._

## GRAND QUESTION 4

__Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?__

_The movie I chose was Star Wars since Anakin's introduction in Star Wars: Episode I - The Phantom Menace as a kid. The usage of the name spiked during 2005 the movie release year, indicating a strong correlation between the movie and the popularity of the name_

```{python}
## Star Wars: |Anakin| = Vader!
name = (names
    .query("name == 'Anakin'")
)

chart = (alt.Chart(name)
    .mark_line()
    .encode(
        x = "year",
        y = "Total",
        color = alt.Color("name")
    )
)
 
movie_release = names.query("name == 'Anakin' & year == '2005'")

chart1 = (alt.Chart(movie_release)
    .mark_rule(color='red')
    .encode(
        x = "year"
    )
)
chart + chart1
```